/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "react";
import r from "prop-types";
import { validatePackage as R, classNames as v } from "@progress/kendo-react-common";
import { cardType as s, cardOrientation as l } from "./interfaces/Enums.mjs";
import { packageMetadata as T } from "../package-metadata.mjs";
const a = e.forwardRef((t, d) => {
  R(T);
  const { children: m, dir: p, style: f, className: u, type: o, orientation: n, ...y } = t, i = e.useRef(null), c = e.useRef(null);
  return e.useImperativeHandle(i, () => ({
    element: c.current,
    props: t
  })), e.useImperativeHandle(d, () => i.current), /* @__PURE__ */ e.createElement(
    "div",
    {
      dir: p,
      style: f,
      ref: c,
      className: v(
        "k-card",
        u,
        { [`k-card-${o}`]: o !== s.DEFAULT },
        n === null ? void 0 : n !== l.HORIZONTAL ? "k-card-vertical" : "k-card-horizontal"
      ),
      ...y
    },
    m
  );
});
a.displayName = "KendoReactCard";
a.propTypes = {
  children: r.node,
  className: r.string,
  dir: r.string,
  orientation: r.oneOf(["horizontal", "vertical"]),
  style: r.object,
  type: r.oneOf(["default", "primary", "info", "success", "warning", "error"])
};
a.defaultProps = {
  type: s.DEFAULT,
  orientation: l.VERTICAL
};
export {
  a as Card
};
