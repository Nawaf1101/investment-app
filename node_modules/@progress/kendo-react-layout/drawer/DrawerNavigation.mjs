/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as a from "react";
import r from "prop-types";
import { DrawerContext as q } from "./context/DrawerContext.mjs";
import { DrawerItem as z } from "./DrawerItem.mjs";
import { validatePackage as G, shouldShowValidationUI as J, classNames as h, WatermarkOverlay as Q } from "@progress/kendo-react-common";
import { packageMetadata as I } from "../package-metadata.mjs";
const Y = 240, Z = 50, tt = { type: "slide", duration: 200 }, at = { type: "slide", duration: 0 }, T = a.forwardRef((b, D) => {
  const { children: E, className: W, style: c } = b;
  G(I);
  const x = J(I), {
    animation: l,
    expanded: s,
    mode: o,
    position: n,
    onOverlayClick: g,
    mini: e,
    dir: d,
    width: u,
    miniWidth: p,
    items: y,
    item: A,
    onSelect: C
  } = a.useContext(q), i = a.useRef(null), O = a.useCallback(
    () => {
      i.current && i.current.focus();
    },
    []
  ), t = typeof l != "boolean" ? l : l === !1 ? at : tt, f = u || Y, k = p || Z;
  a.useImperativeHandle(D, () => ({
    element: i.current,
    focus: O
  }));
  const M = a.useMemo(
    () => "k-drawer " + h(
      {
        "k-drawer-start": n === "start",
        "k-drawer-end": n === "end"
      },
      W
    ),
    [n]
  ), P = {
    opacity: 1,
    flexBasis: f,
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, _ = {
    opacity: 1,
    transform: "translateX(0px)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, L = {
    opacity: e ? 1 : 0,
    flexBasis: e ? k : 0,
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, R = {
    opacity: 0,
    transform: "translateX(-100%)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, X = {
    opacity: 0,
    transform: "translateX(100%)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, v = {
    transform: "translateX(0%)",
    WebkitTransitionDuration: (t && t.duration) + "ms",
    /* Safari */
    transitionDuration: (t && t.duration) + "ms"
  }, F = s ? o === "push" ? P : _ : o === "push" ? L : d === "ltr" && n === "start" || d === "rtl" && n === "end" ? e ? v : R : e ? v : X, U = y && /* @__PURE__ */ a.createElement(
    "ul",
    {
      className: "k-drawer-items",
      role: "menubar",
      "aria-label": "drawer-list",
      "aria-expanded": s
    },
    y.map(
      (H, N) => {
        const { className: S, level: m, ...B } = H, j = m != null ? m : 0, K = h(
          S,
          e ? "" : `k-level-${j}`
        ), V = {
          index: N,
          className: K,
          ...B,
          onSelect: C
        }, $ = A || z;
        return /* @__PURE__ */ a.createElement($, { key: N, ...V });
      }
    )
  ), w = /* @__PURE__ */ a.createElement(
    "div",
    {
      style: t ? { ...F, ...c } : c,
      className: M,
      ref: i
    },
    /* @__PURE__ */ a.createElement(
      "div",
      {
        className: "k-drawer-wrapper",
        style: !s && e && o === "overlay" ? { width: k } : { width: f }
      },
      U || E
    ),
    x && /* @__PURE__ */ a.createElement(Q, null)
  );
  return o === "overlay" ? /* @__PURE__ */ a.createElement(a.Fragment, null, s && /* @__PURE__ */ a.createElement("div", { className: "k-overlay", onClick: g }), w) : w;
});
T.propTypes = {
  children: r.any,
  className: r.string,
  style: r.object,
  item: r.any,
  tabIndex: r.number
};
T.displayName = "KendoDrawerNavigation";
export {
  T as DrawerNavigation
};
