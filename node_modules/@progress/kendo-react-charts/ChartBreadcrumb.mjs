/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import e from "prop-types";
import { Breadcrumb as g } from "@progress/kendo-react-layout";
import { SvgIcon as I } from "@progress/kendo-react-common";
import { homeIcon as w } from "@progress/kendo-svg-icons";
import { DrilldownStateChangeEvent as y } from "./events/drilldown-state-change-event.mjs";
const i = n.forwardRef((t, c) => {
  const o = n.useRef(null), s = n.useRef(null);
  n.useImperativeHandle(o, () => ({
    element: s.current,
    props: t
  })), n.useImperativeHandle(c, () => o.current);
  let r = [{
    id: "0",
    ...t.rootItem || {
      text: "Home",
      icon: /* @__PURE__ */ n.createElement(
        I,
        {
          icon: w,
          style: { marginInlineEnd: "4px" }
        }
      )
    }
  }];
  t.drilldownState && (r = [...r, ...t.drilldownState.steps.map((a, l) => ({ id: (l + 1).toString(), text: a.drilldownValue }))]);
  const m = { ...t, data: r }, u = (a) => {
    var d;
    const l = "onDrilldownStateChange";
    if (t.hasOwnProperty(l)) {
      const b = r.findIndex((S) => S.id === a.id), f = { steps: (((d = t.drilldownState) == null ? void 0 : d.steps) || []).slice(0, b) }, p = new y({ currentState: t.drilldownState, nextState: f });
      t[l].call(void 0, p);
    }
  };
  return /* @__PURE__ */ n.createElement("div", null, /* @__PURE__ */ n.createElement(g, { ...m, onItemSelect: u }));
}), h = {
  id: e.string,
  style: e.object,
  className: e.string,
  breadcrumbOrderedList: e.elementType,
  breadcrumbListItem: e.elementType,
  breadcrumbDelimiter: e.elementType,
  breadcrumbLink: e.elementType,
  dir: e.oneOf(["ltr", "rtl"]),
  disabled: e.bool,
  valueField: e.string,
  textField: e.string,
  iconField: e.string,
  iconClassField: e.string,
  onItemSelect: e.func,
  ariaLabel: e.string,
  onDrilldownStateChange: e.func,
  drilldownState: e.shape({
    steps: e.array
  }),
  rootItem: e.object
}, v = {
  valueField: "id",
  textField: "text",
  iconField: "icon",
  iconClassField: "iconClass",
  data: []
};
i.displayName = "KendoReactChartBreadcrumb";
i.propTypes = h;
i.defaultProps = v;
export {
  i as ChartBreadcrumb
};
